# Copy&paste from https://github.com/sdispater/pendulum/blob/master/pyproject.toml
name: release

on:
  push:
    tags:
      - "*.*.*"

jobs:
  Linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      - name: Building release
        run: |
          make linux_release
      - name: Upload distributions artifacts
        uses: actions/upload-artifact@v1
        with:
          name: tzfpy-dist
          path: dist/wheelhouse

  macOS:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and set up Poetry
        run: |
          curl -fsS -o get-poetry.py https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
          python get-poetry.py -y
      - name: Build distributions
        run: |
          source $HOME/.poetry/env
          poetry build -vvv
      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v1
        with:
          name: tzfpy-dist
          path: dist

  publish:
    needs: [Linux, macOS]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      - name: Download distribution artifact
        uses: actions/download-artifact@master
        with:
          name: tzfpy-dist
          path: dist
      - name: Install and set up Poetry
        run: |
          curl -fsS -o get-poetry.py https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
          python get-poetry.py -y
      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Check distributions
        run: |
          ls -la dist
      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          source $HOME/.poetry/env
          poetry publish
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      #   with:
      #     tag_name: ${{ steps.tag.outputs.tag }}
      #     release_name: ${{ steps.tag.outputs.tag }}
      #     draft: false
      #     prerelease: false
