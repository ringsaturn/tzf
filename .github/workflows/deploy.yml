# Copy&paste from https://github.com/ultrajson/ultrajson/blob/main/.github/workflows/deploy.yml
name: deploy

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - ".github/workflows/deploy.yml"
  release:
    types:
      - published
  workflow_dispatch:

env:
  FORCE_COLOR: 1

jobs:
  build-native-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          cache: pip
          cache-dependency-path: ".github/workflows/deploy.yml"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel twine

      - name: Build wheels
        run: cd python;python setup.py bdist_wheel
        # Options are supplied via environment variables:
        # env:
        #   # Build separate wheels for macOS's different architectures.
        #   CIBW_ARCHS_MACOS: "x86_64 arm64"
        #   # Build only on Linux architectures that don't need qemu emulation.
        #   CIBW_ARCHS_LINUX: "x86_64 i686"
        #   # Don't build with prerelease Python versions.
        #   CIBW_PROJECT_REQUIRES_PYTHON: ">=3.7,<3.11"
        #   # Run the test suite after each build.
        #   # CIBW_TEST_REQUIRES: "pytest"
        #   # CIBW_TEST_COMMAND: pytest {package}/tests

      - name: Upload as build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*.whl

      - name: Publish package to PyPI
        if: github.event.action == 'published'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload --skip-existing dist/*.whl

      - name: Publish package to TestPyPI
        if: |
          github.repository == 'ringsaturn/tzf' &&
          github.ref == 'refs/heads/main'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ --skip-existing dist/*.whl
