# Copy&paste from https://github.com/ultrajson/ultrajson/blob/main/.github/workflows/deploy.yml
name: deploy

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]
#   release:
#     types:
#       - published
#   workflow_dispatch:

on:
  push:
    tags:
      - "*.*.*"
  release:
    types:
      - published

env:
  FORCE_COLOR: 1

jobs:
  # build_wheels:
  #   name: Build wheels on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-20.04, windows-2019, macos-11]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: git fetch --prune --unshallow

  #     - name: Set up Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.18

  #     - uses: actions/cache@v2
  #       with:
  #         path: |
  #           ~/.cache/go-build
  #           ~/go/pkg/mod
  #         key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
  #         restore-keys: |
  #           ${{ runner.os }}-go-

  #     - name: build so
  #       run: |
  #         cd python;make build

  #     - name: Set up Python
  #       uses: actions/setup-python@v3
  #       with:
  #         cache: pip
  #         cache-dependency-path: ".github/workflows/deploy.yml"

  #     - name: Build wheels
  #       uses: pypa/cibuildwheel@v2.9.0
  #       with:
  #         package-dir: python
  #         output-dir: python/dist

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: tzfpy-dist
  #         path: python/dist/*.whl

  build_linux:
    name: Build wheels on Linux
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: build so
        run: |
          cd python;make build

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          cache: pip
          cache-dependency-path: ".github/workflows/deploy.yml"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.9.0
        env:
          CIBW_BUILD_FRONTEND: "build"
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2014"
          CIBW_MANYLINUX_I686_IMAGE: "manylinux2014"
          CIBW_BUILD: "*manylinux_x86_64"
        with:
          package-dir: python
          output-dir: python/dist

      - uses: actions/upload-artifact@v3
        with:
          name: tzfpy-dist
          path: python/dist/*.whl

  build_macos:
    name: Build wheels on macOS
    runs-on: "macos-11"
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: build so
        run: |
          cd python;make build

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          cache: pip
          cache-dependency-path: ".github/workflows/deploy.yml"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.9.0
        with:
          package-dir: python
          output-dir: python/dist

      - uses: actions/upload-artifact@v3
        with:
          name: tzfpy-dist
          path: python/dist/*.whl

  publish:
    needs: [build_linux, build_macos]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}

      - name: Download distribution artifact
        uses: actions/download-artifact@v3
        with:
          name: tzfpy-dist
          path: python/dist

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          cache: pip
          cache-dependency-path: ".github/workflows/deploy.yml"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel twine

      - name: Publish package to PyPI
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload --skip-existing python/dist/*.whl

      - name: Publish package to TestPyPI
        if: |
          github.repository == 'ringsaturn/tzf' &&
          github.ref == 'refs/heads/main'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ --skip-existing python/dist/*.whl
