name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  deployments: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install go pkgs
        run: |
          make install

      - name: Install test related deps
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin latest

      - name: Test
        run: |
          make test

      - name: Download files
        run: |
          wget https://github.com/evansiroky/timezone-boundary-builder/releases/latest/download/timezones-with-oceans.geojson.zip
          ls -alh
          unzip timezones-with-oceans.geojson.zip
          ls -alh
          mkdir data
          ls -alh
          cp combined-with-oceans.json data/

      - name: Install geojson2tzpb
        run: cd cmd/geojson2tzpb;go install

      - name: Install reducetzpb
        run: cd cmd/reducetzpb;go install

      - name: Install compresstzpb
        run: cd cmd/compresstzpb;go install

      - name: Install preindextzpb
        run: cd cmd/preindextzpb;go install

      - name: Convert GeoJSON to pb
        run: |
          geojson2tzpb data/combined-with-oceans.json | xargs reducetzpb | xargs compresstzpb
          preindextzpb data/combined-with-oceans.reduce.pb
          ls -alh data/

      - name: Bench
        run: |
          make bench | tee benchmark_result.txt

      - name: Continuous Benchmark
        uses: benchmark-action/github-action-benchmark@v1.15.0
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          name: Go Benchmark
          tool: "go"
          output-file-path: benchmark_result.txt
          github-token: ${{ secrets.CI_TOKEN }}
          gh-repository: "github.com/ringsaturn/tzf"
          auto-push: true
          alert-threshold: "150%"
          comment-on-alert: true
          fail-on-alert: false
          # gh-pages-branch: "master"
          benchmark-data-dir-path: "docs/"
          alert-comment-cc-users: "@ringsaturn"

  build-tzfpy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8.12

      - name: Test tzfpy
        run: |
          pip install pytest pytest-benchmark pytest-memray
          pip install -r python/requirements_dev.txt
          cd python;make build
          export PYTHONPATH=`pwd`
          cd tzfpy
          pytest tests.py --memray --benchmark-json output.json
          cd ..
          fil-profile --no-browser run tzfpy/__init__.py

      - name: Continuous Benchmark
        uses: benchmark-action/github-action-benchmark@v1.15.0
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          name: tzf-py Benchmark
          tool: "pytest"
          output-file-path: python/tzfpy/output.json
          github-token: ${{ secrets.CI_TOKEN }}
          gh-repository: "github.com/ringsaturn/tzf"
          auto-push: true
          alert-threshold: "150%"
          comment-on-alert: true
          fail-on-alert: false
          benchmark-data-dir-path: "docs/"
          alert-comment-cc-users: "@ringsaturn"
