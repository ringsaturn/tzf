name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  deployments: write

jobs:
  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Lint README
        run: |
          deno fmt --check ./README.md

  golangci:
    name: golangci-lint
    strategy:
      matrix:
        go: ["1.20", "1.21"]
    permissions:
      contents: read
      pull-requests: read
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m
  build:
    strategy:
      matrix:
        go: ["1.20", "1.21"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: Install go pkgs
        run: |
          make install

      - name: Run coverage
        run: go test -race -coverprofile=coverage.txt -covermode=atomic

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

      - name: Bench
        run: make bench | tee benchmark_result.txt
